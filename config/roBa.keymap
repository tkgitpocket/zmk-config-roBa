#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// ロータリーエンコーダでのスクロール

#define ZMK_POINTING_DEFAULT_SCRL_VAL 120

// 【ZMK】OS設定を日本語キーボードのまま使う
//    ref: https://note.com/kloir_z/n/n314e739f03a1
// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角
#define JP_BSLH  		INT1			  // (backslash)

// レイヤーの定義

#define DEFAULT 0
#define SYMBOL	1
#define MOUSE_CTRL	2
#define NUM_FUNCTION	3
#define MOUSE	4
#define SCROLL	5
#define MODIFIER_BT	6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
    tapping-term-ms = <200>;
};

&trackball {
    //automouse-layer = <4>;

    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        mb4 {
            bindings = <&mkp MB4>;
            key-positions = <6 7>;
        };

        mb5 {
            bindings = <&mkp MB5>;
            key-positions = <7 8>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <18 19>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <19 20>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <20 21>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <30 31>;
        };

        dot {
            bindings = <&kp DOT>;
            key-positions = <31 32>;
        };

        asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <17 18>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <29 30>;
        };

        mb3 {
            bindings = <&mkp MCLK>;
            key-positions = <6 8 7>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        mouse_scroll: mouse_wheel_scrl {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };

        long_hold_mod_tap: long_hold_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LONG_HOLD_MOD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <0>;
            flavor = "tap-preferred";
        };

        medium_hold_mod_tap: medium_hold_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MEDIUM_HOLD_MOD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                              &kp W             &kp E         &kp R                        &kp T                                                                     &kp Y              &kp U  &kp I      &kp O        &kp P
&long_hold_mod_tap LCTRL A         &kp S             &kp D         &kp F                        &mt LEFT_SHIFT G  &kp LS(LG(S))                      &kp UNDERSCORE       &mt RIGHT_SHIFT H  &kp J  &kp K      &mt RCTRL L  &lt 5 MINUS
&medium_hold_mod_tap LEFT_SHIFT Z  &kp X             &kp C         &kp V                        &kp B             &kp LCTRL                          &kp TILDE            &kp N              &kp M  &mkp LCLK  &mkp RCLK    &kp SLASH
&kp ESC                            &mt LEFT_WIN TAB  &kp LEFT_ALT  &lt_to_layer_0 1 INT_HENKAN  &lt 2 SPACE       &lt_to_layer_0 3 INT_MUHENKAN      &mt RCTRL BACKSPACE  &kp ENTER                                         &kp BACKSLASH
            >;

            //sensor-bindings = <&scroll_up_down>;

            sensor-bindings = <&mouse_scroll SCRL_DOWN SCRL_UP>;
        };

        symbol {
            bindings = <
&kp EXCLAMATION     &kp DOUBLE_QUOTES  &kp HASH      &kp DOLLAR      &kp PERCENT                                          &kp AMPERSAND  &kp SINGLE_QUOTE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RS(BACKSLASH)
&kp LCTRL           &kp SEMICOLON      &kp COLON     &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans                   &trans     &kp CARET      &kp AT_SIGN       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EQUAL
&mt LEFT_SHIFT TAB  &kp PLUS           &kp ASTERISK  &kp TILDE       &kp PRINTSCREEN  &trans                   &trans     &kp SEMICOLON  &kp COLON         &kp LESS_THAN         &kp GREATER_THAN       &kp TILDE
&trans              &trans             &trans        &trans          &kp SPACE        &kp INTERNATIONAL_5      &kp RCTRL  &trans                                                                        &kp QUESTION
            >;

            //sensor-bindings = <&inc_dec_kp LC(LS(LEFT_BRACKET)) LC(LS(RIGHT_BRACKET))>; // タブ切り替え

            sensor-bindings = <&mouse_scroll SCRL_LEFT SCRL_RIGHT>;
        };

        mouse_arrow_ctrl {
            bindings = <
&kp TAB         &kp LEFT_ALT  &kp END    &lt 6 SPACE  &mo 5                                                       &kp LC(Y)      &mkp MB4   &mkp MB3   &mkp MB5   &kp UP_ARROW
&mt LCTRL HOME  &kp LC(S)     &kp DEL    &kp RIGHT    &kp LEFT_SHIFT  &kp LC(LA(KP_NUMBER_0))      &kp PAGE_UP    &kp BACKSPACE  &mkp LCLK  &mkp LCLK  &mkp RCLK  &mo 5
&kp LC(Z)       &kp LC(X)     &kp LC(C)  &kp LC(V)    &kp LEFT        &kp EQUAL                    &kp PAGE_DOWN  &kp DOWN       &trans     &mkp LCLK  &mkp RCLK  &kp ENTER
&trans          &trans        &trans     &trans       &trans          &trans                       &kp RCTRL      &kp ENTER                                       &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&mouse_scroll SCRL_LEFT SCRL_RIGHT>;

            //コンパイルエラー sensor-bindings = <&inc_dec_kp C_APP_PREV C_APP_NEXT>   // アプリケーション切り替え
            //sensor-bindings = <&inc_dec_kp C_APP_GROUP_PREV C_APP_GROUP_NEXT>;  // アプリグループ切り替え
            //コンパイルエラー sensor-bindings = <&inc_dec_kp C_WINDOW_PREV C_WINDOW_NEXT>;    // ウィンドウ切り替え
            //sensor-bindings = <&inc_dec_kp C_WORKSPACE_PREV C_WORKSPACE_NEXT>;  // ワークスペース切り替え
            //sensor-bindings = <&inc_dec_kp C_SLEEP C_SLEEP>;                    // スリープ
            //sensor-bindings = <&inc_dec_kp C_SCREENSHOT C_SCREENSHOT>;          // スクリーンショット
            //sensor-bindings = <&inc_dec_kp C_ZOOM_IN C_ZOOM_OUT>;               // ズームイン/アウト
            //sensor-bindings = <&inc_dec_kp LC(LEFT_ARROW) LC(RIGHT_ARROW)>;     // Ctrl+左右矢印
            //sensor-bindings = <&inc_dec_kp LS(LEFT_ARROW) LS(RIGHT_ARROW)>;     // Shift+左右矢印
            //sensor-bindings = <&inc_dec_kp LA(LEFT_ARROW) LA(RIGHT_ARROW)>;     // Alt+左右矢印
            //sensor-bindings = <&inc_dec_kp LC(LS(LEFT_BRACKET)) LC(LS(RIGHT_BRACKET))>; // タブ切り替え
            //sensor-bindings = <&inc_dec_kp LC(UP_ARROW) LC(DOWN_ARROW)>;    // 行移動
            //sensor-bindings = <&inc_dec_kp LC(LEFT_ARROW) LC(RIGHT_ARROW)>; // 単語移動
        };

        num {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                                            &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &trans               &trans               &kp F6        &kp F7        &kp F8        &kp F9        &kp UNDERSCORE
&kp TAB       &kp F10       &kp F11       &kp F12       &kp SPACE     &kp PRINTSCREEN      &trans               &kp PLUS      &kp ASTERISK  &kp COMMA     &kp DOT       &kp SLASH
&trans        &trans        &trans        &trans        &trans        &trans               &kp INTERNATIONAL_4  &trans                                                  &kp QUESTION
            >;

            sensor-bindings = <&mouse_scroll SCRL_LEFT SCRL_RIGHT>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &mkp MB4   &mkp MB3   &mkp MB5   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp LCLK  &mkp LCLK  &mkp RCLK  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans     &mkp LCLK  &mkp RCLK  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                   &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        modifier_bt {
            bindings = <
&trans  &trans        &trans        &trans        &trans                                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &kp LC(LA(DELETE))  &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader         &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans              &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
